
(define false #f)
(define true  #t)
(define nil   (list))
(define head  car)
(define tail  cdr)
(define pair  cons)
(define fst   car)
(define snd   cdr)
(define (partial f arg) (lambda late (apply f (cons arg late))))
(define (last l)    (if (null? (tail l)) (head l) (last (tail l))))
(define (butlast l) (if (null? (tail l)) nil (cons (head l) (butlast (tail l)))))
(define (foldr f z xs) (if (null? xs) z (f (head xs) (foldr f z (tail xs)))))
(define cspace #\space)
(define coparen #\()
(define ccparen #\))
(define cnewline #\newline)
(define ctab #\tab)
