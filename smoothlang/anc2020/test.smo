
(include smoothlang/anc2020/iocons  (iocons 2) (iocons_car 1) (iocons_cdr 1))
(include smoothlang/anc2020/numeral (numeral_to_ulint 1) (ulint_to_numeral 1))
(include smoothlang/anc2020/iochar  stdin stdout (cputc 3) (cgetc 2))


(: (true  a b) a)
(: (false a b) b)
(: (id x)      x)


(: (++   n f x) f (n f x))
(: (+  m n f x) n f (m f x))
(: 0 false)
(: 1               ++ 0)
(: 2               ++ 1)
(: 3               ++ 2)
(: 4               ++ 3)
(: 5               ++ 4)
(: 6               ++ 5)
(: 7               ++ 6)
(: 8               ++ 7)
(: 9               ++ 8)
(: 10              ++ 9)

(: 42              + 10 (+ 10 (+ 10 (+ 10 2))))
(: 43              ++ 42)

(: 100              (+ 10 (+ 10 (+ 10 (+ 10 (+ 10 (+ 10 (+ 10 (+ 10 (+ 10 10))))))))))

(: '*' 42)
(: '+' 43)

(: h (+ 100 4))
(: e (+ 100 1))
(: l (+ 100 8))
(: o (+ 100 (+ 10 1)))


(: (pair x y z) z x y)
(: (fst  z)     z true)
(: (snd  z)     z false)


(: (cons h t) pair false (pair h t))
(: nil        pair true true)
(: null?      fst)
(: (head x)   fst (snd x))
(: (tail x)   snd (snd x))

(: (foldr f z xs) null? xs z (f (head xs) (foldr f z (tail xs))))
(: (map f xs)     null? xs xs  (cons (f (head xs)) (map f (tail xs))))


(: (make-sequence_ f u) foldr f (u nil))
(: (make-mapM_ s f xs)  s (map f xs))


(: (return x r) (iocons x r))
(: sequence_ make-sequence_ >> return)
(: mapM_     make-mapM_ sequence_)

(: (run m)           m 0)
(: (bindhelper f v1) f (iocons_car v1) (iocons_cdr v1))
(: (>>= m f r)       bindhelper f (m r))
(: (>>  m1 m2)       >>= m1 (\ x m2))


(: (putcc s c r)    cputc s c (++ r))
(: (putc  s c r)    putcc s (numeral_to_ulint c) r)

(: putchar putc stdout)

(: (rewrap-getc i) iocons (ulint_to_numeral (iocons_car i)) (iocons_cdr i))
(: (getcc s r)     cgetc s (++ r))
(: (getc  s r)     rewrap-getc (getcc s r))

(: getchar getc stdin)

(: (puts f s)       mapM_ (putc f) s)
(: (putstr s)       mapM_ putchar s)


(: main              run (putstr (cons h (cons e (cons l (cons l (cons o nil)))))))
